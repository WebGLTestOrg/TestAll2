System.register(['./_virtual_cc-BXHWw6BO.js'], (function (exports) {
	'use strict';
	return {
		setters: [function (module) {
			exports({ Acceleration: module.dj, AlphaKey: module.bm, AmbientInfo: module.cm, Asset: module.cM, AssetLibrary: module.d4, AssetManager: module.d0, AsyncDelegate: module.aW, BITMASK_TAG: module.bP, BaseNode: module.ca, BatchedSkinningModelComponent: module.e, BatchingUtility: module.B, BitMask: module.ao, BoxCharacterController: module.dU, BoxCollider: module.dF, BoxColliderComponent: module.dF, BufferAsset: module.cN, BuiltinResMgr: module.d6, CCBoolean: module.aM, CCClass: module.aG, CCFloat: module.aL, CCInteger: module.aK, CCLoader: module.d2, CCObject: module.aI, CCObjectFlags: module.aJ, CCString: module.aN, CachedArray: module.an, CallbacksInvoker: module.bT, Camera: module.cz, CameraComponent: module.cz, CapsuleCharacterController: module.dT, CapsuleCollider: module.dH, CapsuleColliderComponent: module.dH, CharacterController: module.dz, Collider: module.dE, ColliderComponent: module.dE, Color: module.K, ColorKey: module.bl, CompactValueTypeArray: module.aO, Component: module.cf, ConeCollider: module.dK, ConfigurableConstraint: module.dQ, ConstantForce: module.dA, Constraint: module.dO, CylinderCollider: module.dJ, CylinderColliderComponent: module.dJ, DEFAULT_OCTREE_DEPTH: module.cs, DEFAULT_WORLD_MAX_POS: module.cr, DEFAULT_WORLD_MIN_POS: module.cq, DebugMode: module.b8, DebugView: module.c7, Details: module.cK, DirectionalLight: module.D, DirectionalLightComponent: module.D, Director: module.cF, DirectorEvent: module.cE, EAxisDirection: module.dV, EColliderType: module.dX, ENUM_TAG: module.bO, EPSILON: module.W, EPhysicsDrawFlags: module.dY, ERigidBodyType: module.dW, EasingMethod: module.bS, EditorExtendable: module.aT, EffectAsset: module.cV, Enum: module.ap, Event: module.da, EventAcceleration: module.db, EventGamepad: module.df, EventHMD: module.dh, EventHandheld: module.di, EventHandle: module.dg, EventHandler: module.ce, EventKeyboard: module.dc, EventMouse: module.dd, EventTarget: module.aU, EventTouch: module.de, Eventify: module.aV, ExtrapolationMode: module.bg, FixedConstraint: module.dR, FogInfo: module.co, GCObject: module.bL, Game: module.cH, Gradient: module.bn, HALF_PI: module.T, HingeConstraint: module.dP, ImageAsset: module.cS, Input: module.dn, InstancedBuffer: module.c3, JavaScript: module.cZ, JsonAsset: module.cR, KeyCode: module.dk, LOD: module.g, LODGroup: module.h, Layers: module.cc, Light: module.L, LightComponent: module.L, LightProbeInfo: module.cw, MATH_FLOAT_ARRAY: module.aj, Mat3: module.C, Mat4: module.E, Material: module.cW, MathBase: module.ak, Mesh: module.M, MeshCollider: module.dI, MeshColliderComponent: module.dI, MeshRenderer: module.a, MissingScript: module.cC, MobilityMode: module.ck, ModelComponent: module.a, ModelRenderer: module.cA, Node: module.ca, NodeActivator: module.cg, NodeEventType: module.cl, NodePool: module.d8, NodeSpace: module.ci, ObjectCurve: module.bk, OctreeInfo: module.ct, PhysicMaterial: module.dB, PhysicsLineStripCastResult: module.dD, PhysicsMaterial: module.dB, PhysicsRayResult: module.dC, PhysicsSystem: module.dx, PipelineEventProcessor: module.c5, PipelineEventType: module.c6, PipelineInputAssemblerData: module.c9, PipelineSceneData: module.c2, PipelineStateManager: module.c4, PlaneCollider: module.dN, PointLight: module.P, PointToPointConstraint: module.dS, Pool: module.al, PostSettingsInfo: module.cv, Prefab: module.ch, PrefabLink: module.cD, PrivateNode: module.cy, Profiler: module.dZ, Quat: module.Q, QuatCurve: module.bi, QuatInterpolationMode: module.bj, RangedDirectionalLight: module.R, RealCurve: module.be, RealInterpolationMode: module.bf, Rect: module.I, RecyclePool: module.am, ReflectionProbe: module.i, ReflectionProbeManager: module.j, ReflectionProbeType: module.k, RenderTexture: module.cX, RenderableComponent: module.cA, Renderer: module.cB, RenderingSubMesh: module.cO, RigidBody: module.dy, RigidBodyComponent: module.dy, Root: module.m, Scene: module.cb, SceneAsset: module.cP, SceneGlobals: module.cx, Scheduler: module.bd, Script: module.cY, Settings: module.bp, SettingsCategory: module.bo, ShadowsInfo: module.cp, SimplexCollider: module.dM, Size: module.G, Skeleton: module.S, SkinInfo: module.cu, SkinnedMeshBatchRenderer: module.e, SkinnedMeshRenderer: module.d, SkinnedMeshUnit: module.f, SkinningModelComponent: module.d, SkinningModelUnit: module.f, SkyboxInfo: module.cn, SphereCollider: module.dG, SphereColliderComponent: module.dG, SphereLight: module.b, SphereLightComponent: module.b, SpotLight: module.c, SpotLightComponent: module.c, System: module.bs, SystemEvent: module.dq, SystemEventType: module.d9, SystemPriority: module.br, TWO_PI: module.U, TangentWeightMode: module.bh, TerrainCollider: module.dL, TextAsset: module.cQ, Texture2D: module.cT, TextureCube: module.cU, Touch: module.dl, TransformBit: module.cj, Tween: module.e2, TweenAction: module.e1, TweenSystem: module.e0, TypeScript: module.c_, VERSION: module.q, ValueType: module.ar, Vec2: module.V, Vec3: module.w, Vec4: module.y, WebGL2Device: module.du, WebGLDevice: module.dt, WebView: module.e5, WorldNode3DToLocalNodeUI: module.aC, WorldNode3DToWorldNodeUI: module.aD, __checkObsoleteInNamespace__: module.aB, __checkObsolete__: module.aA, _decorator: module.aF, _resetDebugSetting: module.bV, absMax: module.af, absMaxComponent: module.ae, applyMixins: module.bU, approx: module.Y, assert: module.a$, assertID: module.b4, assertIsNonNullable: module.bZ, assertIsTrue: module.b_, assertsArrayIndex: module.b$, assetManager: module.c$, bezier: module.bv, bezierByTime: module.bw, binarySearch: module.bW, binarySearchBy: module.bY, binarySearchEpsilon: module.bX, bits: module.t, builtinResMgr: module.d7, ccenum: module.aq, cclegacy: module.s, clamp: module.Z, clamp01: module.$, color: module.N, convertUtils: module.aE, debug: module.aX, debugID: module.b0, deprecateModuleExportedName: module.az, deserialize: module.cJ, deserializeTag: module.aQ, director: module.cG, disallowAnimation: module.bF, displayName: module.bA, displayOrder: module.bB, easing: module.bt, editable: module.bx, editorExtrasTag: module.aP, enumerableProps: module.ag, equals: module.X, error: module.aZ, errorID: module.b2, find: module.cd, flattenCodeArray: module.c0, floatToHalf: module.ah, formerlySerializedAs: module.bH, game: module.cI, garbageCollectionManager: module.bK, geometry: module.p, getError: module.b7, getPhaseID: module.c8, getSerializationMetadata: module.aS, gfx: module.l, halfToFloat: module.ai, input: module.dm, instantiate: module.cL, inverseLerp: module.ad, isCCClassOrFastDefined: module.aH, isCCObject: module.bQ, isDisplayStats: module.b5, isValid: module.bR, js: module.as, lerp: module.a0, loadWasmModuleBullet: module.dv, loader: module.d3, log: module.aY, logID: module.b1, macro: module.bb, markAsWarning: module.ay, mat4: module.F, math: module.n, memop: module.o, misc: module.at, murmurhash2_32_gc: module.bu, native: module.dr, nextPow2: module.aa, override: module.bG, path: module.au, physics: module.dw, pingPong: module.ac, pipeline: module.c1, preTransforms: module.O, profiler: module.d_, pseudoRandom: module.a7, pseudoRandomRange: module.a8, pseudoRandomRangeInt: module.a9, quat: module.A, random: module.a3, randomRange: module.a5, randomRangeInt: module.a6, range: module.bC, rangeStep: module.bD, rect: module.J, removeProperty: module.ax, renderer: module.r, rendering: module.ds, repeat: module.ab, replaceProperty: module.aw, resources: module.d1, screen: module.b9, serializable: module.bI, serializeTag: module.aR, setDefaultLogTimes: module.av, setDisplayStats: module.b6, setPropertyEnumType: module.bM, setPropertyEnumTypeOnAttrs: module.bN, setRandGenerator: module.a4, settings: module.bq, shift: module.bJ, size: module.H, slide: module.bE, sys: module.ba, systemEvent: module.dp, toDegree: module.a2, toRadian: module.a1, tooltip: module.by, tween: module.e3, tweenProgress: module.d$, tweenUtil: module.e4, url: module.d5, utils: module.u, v2: module.v, v3: module.x, v4: module.z, visible: module.bz, visibleRect: module.bc, warn: module.a_, warnID: module.b3 });
		}],
		execute: (function () {



		})
	};
}));
